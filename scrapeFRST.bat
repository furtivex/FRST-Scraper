:: Scrape FRST.txt and Addition.txt for pertinent data
:: Created by Furtivex
@ECHO OFF
@SETLOCAL
@PROMPT #
SET "downloads=C:\Users\d1savow3d\Downloads"

DEL /F/Q "%TEMP%\Clipboard*" >NUL 2>&1

DIR /B/S/A:-D "%downloads%\FRST*.txt" 2>NUL>"%TEMP%\clipboard00"
DIR /B/S/A:-D "%downloads%\Addition*.txt" 2>NUL>>"%TEMP%\clipboard00"
DIR /B/S/A:-D "%downloads%\Fixlog*.txt" 2>NUL>>"%TEMP%\clipboard00"
DIR /B/S/A:-D "%downloads%\Fixlist*.txt" 2>NUL>>"%TEMP%\clipboard00"


FOR /F "TOKENS=*" %%G IN ( %TEMP%\clipboard00 ) DO @(
  TYPE "%%G">>"%TEMP%\Clipboard01"
  )

GREP -Eis "detected!|\[X\]|== (ATTENTION|ВНИМАНИЕ|Cyrillic)|AlternateDataStreams|\\StartupApproved\\|\\MountPoints|\(?No File\)?|\(?Нет файла\)?|no ImagePath|(ATTENTION|ВНИМАНИЕ):|zero byte File|not found|no filepath" <"%TEMP%\Clipboard01" >"%TEMP%\Clipboard02"
GREP -Pis "(Page|URL) =\s+?$|grubx64\.efi|\{[A-F0-9]{8}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{4}-[A-F0-9]{12}\}] -\> $|\(Allow\) LPort=\d{2,5}|DisallowedCertificates" <"%TEMP%\Clipboard01" >>"%TEMP%\Clipboard02"
GREP -Eis "\[(File not signed|Файл не подписан)\]|000000000 __SHD|File is in use" <"%TEMP%\Clipboard01" >"%TEMP%\Clipboard05"
SORT_ -f -u <"%TEMP%\Clipboard02" >"%TEMP%\Clipboard03"
SORT_ -f -u <"%TEMP%\Clipboard05" >"%TEMP%\Clipboard06"

ECHO.Start::>"%TEMP%\ClipboardFinal.txt"
ECHO.SystemRestore: On>>"%TEMP%\ClipboardFinal.txt"
ECHO.CreateRestorePoint:>>"%TEMP%\ClipboardFinal.txt"
ECHO.CloseProcesses:>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
TYPE "%TEMP%\Clipboard03">>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.Removeproxy:>>"%TEMP%\ClipboardFinal.txt"
ECHO.Hosts:>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: netsh winsock reset catalog>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: netsh int ip reset resetlog.txt>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: reg export HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\SharedAccess\Defaults\FirewallPolicy\FirewallRules C:\FirewallBackup.reg>>"%TEMP%\ClipboardFinal.txt"
ECHO.C:\FirewallBackup.reg>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: netsh advfirewall reset>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: netsh advfirewall set allprofiles state ON>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: bitsadmin /reset /allusers>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: ipconfig /flushdns>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.StartPowerShell:>>"%TEMP%\ClipboardFinal.txt"
ECHO.Write-Output "PowerShell run 1">>"%TEMP%\ClipboardFinal.txt"
ECHO.# Function to create a new firewall rule if it does not exist. Credits AdvancedSetup>>"%TEMP%\ClipboardFinal.txt"
ECHO.$ruleNameTCP = "Block Inb TCP">>"%TEMP%\ClipboardFinal.txt"
ECHO.$ruleNameUDP = "Block Inb UDP">>"%TEMP%\ClipboardFinal.txt"
ECHO.$tcpPorts = "135-139","445","1234","3389","5555","9034" # TCP ports and ranges as an array>>"%TEMP%\ClipboardFinal.txt"
ECHO.$udpPorts = "135-139","445","1234","3389","5555","9034" # UDP ports and ranges as an array>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.function Create-FirewallRule {>>"%TEMP%\ClipboardFinal.txt"
ECHO.    param ^(>>"%TEMP%\ClipboardFinal.txt"
ECHO.        [string]$ruleName,>>"%TEMP%\ClipboardFinal.txt"
ECHO.        [string[]]$ports, # Accepts an array of ports>>"%TEMP%\ClipboardFinal.txt"
ECHO.        [string]$protocol>>"%TEMP%\ClipboardFinal.txt"
ECHO.    ^)>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.    # Check if the rule already exists>>"%TEMP%\ClipboardFinal.txt"
ECHO.    if ^(-not ^(Get-NetFirewallRule -DisplayName $ruleName -ErrorAction SilentlyContinue^)^) {>>"%TEMP%\ClipboardFinal.txt"
ECHO.        try {>>"%TEMP%\ClipboardFinal.txt"
ECHO.            # Try to create the new firewall rule>>"%TEMP%\ClipboardFinal.txt"
ECHO.            New-NetFirewallRule -DisplayName $ruleName -Direction Inbound -LocalPort $ports -Protocol $protocol -Action Block>>"%TEMP%\ClipboardFinal.txt"
ECHO.            Write-Host "Created rule '$ruleName'.">>"%TEMP%\ClipboardFinal.txt"
ECHO.        } catch {>>"%TEMP%\ClipboardFinal.txt"
ECHO.            Write-Error "Failed to create rule '$ruleName': $_">>"%TEMP%\ClipboardFinal.txt"
ECHO.        }>>"%TEMP%\ClipboardFinal.txt"
ECHO.    } else {>>"%TEMP%\ClipboardFinal.txt"
ECHO.        Write-Host "Rule '$ruleName' already exists.">>"%TEMP%\ClipboardFinal.txt"
ECHO.    }>>"%TEMP%\ClipboardFinal.txt"
ECHO.}>>"%TEMP%\ClipboardFinal.txt"
ECHO.# Create the TCP firewall rule to add additional blocking>>"%TEMP%\ClipboardFinal.txt"
ECHO.Create-FirewallRule -ruleName $ruleNameTCP -ports $tcpPorts -protocol TCP>>"%TEMP%\ClipboardFinal.txt"
ECHO.# Create the UDP firewall rule to add additional blocking>>"%TEMP%\ClipboardFinal.txt"
ECHO.Create-FirewallRule -ruleName $ruleNameUDP -ports $udpPorts -protocol UDP>>"%TEMP%\ClipboardFinal.txt"
ECHO.Stop-Transcript>>"%TEMP%\ClipboardFinal.txt"
ECHO.EndPowerShell:>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.EmptyEventLogs:>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: DISM /Online /Cleanup-image /Restorehealth>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: sfc /scannow>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: winmgmt /salvagerepository>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: winmgmt /verifyrepository>>"%TEMP%\ClipboardFinal.txt"
ECHO.CMD: chcp 65001 ^& chkdsk C: /V>>"%TEMP%\ClipboardFinal.txt"
ECHO.ExportKey: HKLM\SOFTWARE\Microsoft\Windows Defender\Exclusions>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.StartPowershell:>>"%TEMP%\ClipboardFinal.txt"
ECHO.Remove-MpPreference -ExclusionPath "C:\ProgramData\WindowsTask\AMD.exe">>"%TEMP%\ClipboardFinal.txt"
ECHO.Remove-MpPreference -ExclusionPath "C:\ProgramData">>"%TEMP%\ClipboardFinal.txt"
ECHO.Remove-MpPreference -ExclusionProcess "powershell.exe">>"%TEMP%\ClipboardFinal.txt"
ECHO.Remove-MpPreference -ExclusionExtension ".exe">>"%TEMP%\ClipboardFinal.txt"
ECHO.Remove-MpPreference -ExclusionExtension ".dll">>"%TEMP%\ClipboardFinal.txt"
ECHO.Remove-MpPreference -ExclusionPath "C:">>"%TEMP%\ClipboardFinal.txt"
ECHO.Set-MpPreference -DisableAutoExclusions $true -Force>>"%TEMP%\ClipboardFinal.txt"
ECHO.Set-MpPreference -Mapsreporting basic -Force>>"%TEMP%\ClipboardFinal.txt"
ECHO.Set-MpPreference -DisableRealtimeMonitoring $false -Force>>"%TEMP%\ClipboardFinal.txt"
ECHO.Set-MpPreference -DisablePrivacyMode $true -Force>>"%TEMP%\ClipboardFinal.txt"
ECHO.Set-MpPreference -DisableIOAVProtection $false -Force>>"%TEMP%\ClipboardFinal.txt"
ECHO.Set-MpPreference -UILockdown 0 >>"%TEMP%\ClipboardFinal.txt"
ECHO.Set-MpPreference -ScanPurgeItemsAfterDelay 1 >>"%TEMP%\ClipboardFinal.txt"
ECHO.Set-MpPreference -CheckForSignaturesBeforeRunningScan $true -Force>>"%TEMP%\ClipboardFinal.txt"
ECHO.Set-MpPreference -PUAProtection enabled -Force>>"%TEMP%\ClipboardFinal.txt"
ECHO.Update-MpSignature>>"%TEMP%\ClipboardFinal.txt"
ECHO.Get-MpComputerStatus>>"%TEMP%\ClipboardFinal.txt"
ECHO.Get-MpPreference>>"%TEMP%\ClipboardFinal.txt"
ECHO.EndPowerShell:>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.Emptytemp:>>"%TEMP%\ClipboardFinal.txt"
ECHO.End::>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
ECHO.>>"%TEMP%\ClipboardFinal.txt"
TYPE "%TEMP%\Clipboard06">>"%TEMP%\ClipboardFinal.txt"

"C:\Program Files\Notepad2\Notepad2.exe" "%TEMP%\ClipboardFinal.txt"
DEL /F/Q "%TEMP%\Clipboard0?" >NUL 2>&1